"""An object with a unique identifier"""
interface Node {
  """The unique identifier for this object"""
  id: ID!
}

"""A date-time string at UTC, such as 2007-12-03T10:15:30Z"""
scalar DateTime

"""Essential scalar type: JSON"""
scalar JSON

"""Essential scalar type: Decimal"""
scalar Decimal

enum BookCategory {
  FICTION
  NONFICTION
  SCIENCE
  HISTORY
  BIOGRAPHY
  FANTASY
  MYSTERY
}

type Author {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  bio: String
  email: String!
  website: String
  books: [Book!]!
  articles: [Article!]!
}

type Book {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  summary: String
  published: DateTime!
  pages: Int!
  category: BookCategory!
  price: Decimal!
  inStock: Boolean!
  author: Author!
  authorId: String!
  reviews: [Review!]!
}

type Review {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  rating: Int!
  text: String
  book: Book!
  bookId: String!
  readerName: String!
  readerEmail: String!
}

type Article {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  content: String!
  published: Boolean!
  author: Author!
  authorId: String!
  readCount: Int!
  tags: [String!]!
}

type Publisher {
  id: String!
  name: String!
  address: String!
  country: String!
  website: String
  founded: Int
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

"""Pagination input for forward pagination"""
input ForwardPaginationInput {
  """Returns the first n elements from the list."""
  first: Int

  """Returns the elements in the list that come after the specified cursor."""
  after: String
}

"""Pagination input for backward pagination"""
input BackwardPaginationInput {
  """Returns the last n elements from the list."""
  last: Int

  """
  Returns the elements in the list that come before the specified cursor.
  """
  before: String
}

"""Combined pagination input"""
input PaginationInput {
  """Returns the first n elements from the list."""
  first: Int

  """Returns the elements in the list that come after the specified cursor."""
  after: String

  """Returns the last n elements from the list."""
  last: Int

  """
  Returns the elements in the list that come before the specified cursor.
  """
  before: String
}

"""An edge in a Author connection."""
type AuthorEdge {
  """The Author at the end of the edge."""
  node: Author!

  """A cursor for use in pagination."""
  cursor: String!
}

"""A connection to a list of Author items."""
type AuthorConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of Author edges."""
  edges: [AuthorEdge!]!

  """The total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a Book connection."""
type BookEdge {
  """The Book at the end of the edge."""
  node: Book!

  """A cursor for use in pagination."""
  cursor: String!
}

"""A connection to a list of Book items."""
type BookConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of Book edges."""
  edges: [BookEdge!]!

  """The total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a Review connection."""
type ReviewEdge {
  """The Review at the end of the edge."""
  node: Review!

  """A cursor for use in pagination."""
  cursor: String!
}

"""A connection to a list of Review items."""
type ReviewConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of Review edges."""
  edges: [ReviewEdge!]!

  """The total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a Article connection."""
type ArticleEdge {
  """The Article at the end of the edge."""
  node: Article!

  """A cursor for use in pagination."""
  cursor: String!
}

"""A connection to a list of Article items."""
type ArticleConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of Article edges."""
  edges: [ArticleEdge!]!

  """The total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a Publisher connection."""
type PublisherEdge {
  """The Publisher at the end of the edge."""
  node: Publisher!

  """A cursor for use in pagination."""
  cursor: String!
}

"""A connection to a list of Publisher items."""
type PublisherConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of Publisher edges."""
  edges: [PublisherEdge!]!

  """The total count of items in the connection."""
  totalCount: Int!
}

"""Sort direction for ordering results"""
enum SortDirection {
  """Ascending order"""
  ASC

  """Descending order"""
  DESC
}

"""Sort input for AuthorSortInput connections"""
input AuthorSortInputSortInput {
  """Placeholder field when no sortable fields are available"""
  _placeholder: SortDirection
}

"""Sort input for BookSortInput connections"""
input BookSortInputSortInput {
  """Placeholder field when no sortable fields are available"""
  _placeholder: SortDirection
}

"""Sort input for ReviewSortInput connections"""
input ReviewSortInputSortInput {
  """Placeholder field when no sortable fields are available"""
  _placeholder: SortDirection
}

"""Sort input for ArticleSortInput connections"""
input ArticleSortInputSortInput {
  """Placeholder field when no sortable fields are available"""
  _placeholder: SortDirection
}

"""Sort input for PublisherSortInput connections"""
input PublisherSortInputSortInput {
  """Placeholder field when no sortable fields are available"""
  _placeholder: SortDirection
}

"""Input type for numeric filtering operations"""
input NumericFilterInput {
  """Equal to the given value"""
  equals: Float

  """Not equal to the given value"""
  not: Float

  """Greater than the given value"""
  gt: Float

  """Less than the given value"""
  lt: Float
}

"""Input type for string filtering operations"""
input StringFilterInput {
  """Equal to the given value"""
  equals: String

  """Not equal to the given value"""
  not: String

  """In the given list of values"""
  in: [String!]

  """Not in the given list of values"""
  notIn: [String!]

  """Contains the given value"""
  contains: String

  """Starts with the given value"""
  startsWith: String

  """Ends with the given value"""
  endsWith: String
}

"""Input type for boolean filtering operations"""
input BooleanFilterInput {
  """Equal to the given value"""
  equals: Boolean

  """Not equal to the given value"""
  not: Boolean
}

"""Input type for datetime filtering operations"""
input DateTimeFilterInput {
  """Equal to the given value"""
  equals: DateTime

  """Not equal to the given value"""
  not: DateTime

  """Greater than the given value"""
  gt: DateTime

  """Less than the given value"""
  lt: DateTime
}

"""Query arguments for Author with optional filter, sort, and pagination"""
input AuthorQueryArgs {
  """Number of items to return from the beginning"""
  first: Int

  """Cursor for pagination after this item"""
  after: String

  """Number of items to return from the end"""
  last: Int

  """Cursor for pagination before this item"""
  before: String

  """Return connection format with edges and pageInfo"""
  connection: Boolean
}

"""Query arguments for Book with optional filter, sort, and pagination"""
input BookQueryArgs {
  """Number of items to return from the beginning"""
  first: Int

  """Cursor for pagination after this item"""
  after: String

  """Number of items to return from the end"""
  last: Int

  """Cursor for pagination before this item"""
  before: String

  """Return connection format with edges and pageInfo"""
  connection: Boolean
}

"""Query arguments for Review with optional filter, sort, and pagination"""
input ReviewQueryArgs {
  """Number of items to return from the beginning"""
  first: Int

  """Cursor for pagination after this item"""
  after: String

  """Number of items to return from the end"""
  last: Int

  """Cursor for pagination before this item"""
  before: String

  """Return connection format with edges and pageInfo"""
  connection: Boolean
}

"""Query arguments for Article with optional filter, sort, and pagination"""
input ArticleQueryArgs {
  """Number of items to return from the beginning"""
  first: Int

  """Cursor for pagination after this item"""
  after: String

  """Number of items to return from the end"""
  last: Int

  """Cursor for pagination before this item"""
  before: String

  """Return connection format with edges and pageInfo"""
  connection: Boolean
}

"""
Query arguments for Publisher with optional filter, sort, and pagination
"""
input PublisherQueryArgs {
  """Number of items to return from the beginning"""
  first: Int

  """Cursor for pagination after this item"""
  after: String

  """Number of items to return from the end"""
  last: Int

  """Cursor for pagination before this item"""
  before: String

  """Return connection format with edges and pageInfo"""
  connection: Boolean
}