datasource db {
    provider = 'postgresql'
    url = env('DATABASE_URL')
}

generator js {
    provider = 'prisma-client-js'
}

plugin graphql {
    provider = '../../dist'
    output = './schema.graphql'
}

enum BookCategory {
    FICTION
    NONFICTION
    SCIENCE
    HISTORY
    BIOGRAPHY
    FANTASY
    MYSTERY
}

model Author {
    id          String    @id @default(uuid())
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt
    name        String
    bio         String?
    email       String    @unique
    website     String?
    books       Book[]
    articles    Article[]
}

model Book {
    id          String       @id @default(uuid())
    createdAt   DateTime     @default(now())
    updatedAt   DateTime     @updatedAt
    title       String
    summary     String?
    published   DateTime
    pages       Int
    category    BookCategory
    price       Decimal
    inStock     Boolean      @default(true)
    author      Author       @relation(fields: [authorId], references: [id])
    authorId    String
    reviews     Review[]
}

model Review {
    id          String    @id @default(uuid())
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt
    rating      Int       @default(5)
    text        String?
    book        Book      @relation(fields: [bookId], references: [id])
    bookId      String
    readerName  String
    readerEmail String
}

model Article {
    id         String   @id @default(uuid())
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt
    title      String
    content    String
    published  Boolean  @default(false)
    author     Author   @relation(fields: [authorId], references: [id])
    authorId   String
    readCount  Int      @default(0)
    tags       String[]
}

model Publisher {
    id       String  @id @default(uuid())
    name     String
    address  String
    country  String
    website  String?
    founded  Int?
}
